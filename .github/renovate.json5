{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:best-practices",
    "docker:enableMajor",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    "helpers:pinGitHubActionDigests"
  ],
  dependencyDashboardLabels: ["renovate"],
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  commitBodyTable: true,
  labels: ["renovate"],

  packageRules: [
    // Auto-merge Galaxy digest-only bumps
    { matchDatasources: ["galaxy"], matchUpdateTypes: ["digest"], automerge: true, automergeType: "pr" },

    // Auto-merge minor/patch GitHub Actions
    { matchManagers: ["github-actions"], matchDatasources: ["github-tags"], matchUpdateTypes: ["minor","patch"], automerge: true, automergeType: "pr" },

    // Group Galaxy deps
    { matchManagers: ["ansible-galaxy"], groupName: "ansible-dependencies" },

    // Silence ubuntu-latest etc.
    { matchDatasources: ["github-runners"], enabled: false }
  ],

  customManagers: [
    // ===== asdf in roles/asdf/defaults/main.yml =====

    // golang (use language datasource; no tag parsing)
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*golang[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "golang-version",
      depNameTemplate: "go",
      versioningTemplate: "semver"
    },

    // python
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*python[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "python-version",
      depNameTemplate: "python",
      versioningTemplate: "python"
    },

    // ruby
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*ruby[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "ruby-version",
      depNameTemplate: "ruby",
      versioningTemplate: "ruby"
    },

    // helm (GitHub releases)
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*helm[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "github-releases",
      packageNameTemplate: "helm/helm",
      versioningTemplate: "semver"
    },

    // kubectl (GitHub tags, strip leading 'v')
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*kubectl[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "github-tags",
      packageNameTemplate: "kubernetes/kubernetes",
      extractVersionTemplate: "^v(?<version>.*)$",
      versioningTemplate: "semver"
    },

    // packer (GitHub releases)
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*packer[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "github-releases",
      packageNameTemplate: "hashicorp/packer",
      versioningTemplate: "semver"
    },

    // awscli (GitHub tags)
    {
      customType: "regex",
      managerFilePatterns: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "-\\s*name:\\s*awscli[\\s\\S]*?\\n\\s*version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      datasourceTemplate: "github-tags",
      packageNameTemplate: "aws/aws-cli",
      versioningTemplate: "semver"
    },

    // ===== GitHub Actions workflows =====

    // python-version in workflows
    {
      customType: "regex",
      managerFilePatterns: ["/\\.github/workflows/.*\\.ya?ml$"],
      matchStrings: [
        "\\bpython-version:\\s*['\"]?(?<currentValue>\\d+(?:\\.\\d+){1,2})['\"]?"
      ],
      datasourceTemplate: "python-version",
      depNameTemplate: "python",
      versioningTemplate: "python"
    },

    // go-version in workflows
    {
      customType: "regex",
      managerFilePatterns: ["/\\.github/workflows/.*\\.ya?ml$"],
      matchStrings: [
        "\\bgo-version:\\s*['\"]?(?<currentValue>\\d+(?:\\.\\d+){1,2})['\"]?"
      ],
      datasourceTemplate: "golang-version",
      depNameTemplate: "go",
      versioningTemplate: "semver"
    }
  ]
}
