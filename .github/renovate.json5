{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  gitAuthor: "cowdogmoo-renovate-bot <157187596+cowdogmoo-renovate-bot[bot]@users.noreply.github.com>",
  extends: [
    "config:best-practices",
    "docker:enableMajor",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest"
  ],
  dependencyDashboardLabels: ["renovate"],
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  commitBodyTable: true,
  labels: ["renovate"],
  packageRules: [
    {
      description: "Auto-merge GitHub Actions minors/patches",
      matchManagers: ["github-actions"],
      matchDatasources: ["github-tags"],
      automerge: true,
      automergeType: "pr",
      matchUpdateTypes: ["minor", "patch"]
    },
    {
      description: "Group Ansible Galaxy dependencies",
      matchManagers: ["ansible-galaxy"],
      groupName: "ansible-dependencies"
    },
    {
      description: "Auto-merge Ruby minor and patch updates",
      matchManagers: ["ruby-version"],
      automerge: true,
      automergeType: "pr",
      matchUpdateTypes: ["minor", "patch"]
    },
    {
      description: "Group Ruby version updates across all files",
      matchManagers: ["ruby-version", "regex"],
      matchPackageNames: ["ruby", "ruby/ruby"],
      groupName: "ruby-version",
      groupSlug: "ruby"
    },
    {
      matchPackageNames: ["golang/go"],
      extractVersion: "^go(?<version>.*)$"
    },
    {
      matchPackageNames: ["python/cpython"],
      extractVersion: "^v(?<version>.+)$"
    },
    {
      matchPackageNames: ["ruby/ruby"],
      extractVersion: "^v(?<major>\\d+)_(?<minor>\\d+)_(?<patch>\\d+)$"
    }
  ],
  customManagers: [
    {
      customType: "regex",
      description: "Update asdf tool versions in Ansible defaults",
      fileMatch: ["/roles/asdf/defaults/main\\.yml$"],
      matchStrings: [
        "#\\s*renovate:\\s*datasource=(?<datasource>\\S+)\\s+depName=(?<depName>\\S+)(?:\\s+packageName=(?<packageName>\\S+))?(?:\\s+versioning=(?<versioning>\\S+))?(?:\\s+extractVersion=(?<extractVersion>\\S+))?\\s*(?:\\r\\n|\\r|\\n)\\s*-\\s+name:\\s+\\S+\\s*(?:\\r\\n|\\r|\\n)\\s+version:\\s*[\"']?(?<currentValue>[^\"'\\s]+)[\"']?"
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      packageNameTemplate: "{{#if packageName}}{{{packageName}}}{{else}}{{{depName}}}{{/if}}"
    },
  ]
}
