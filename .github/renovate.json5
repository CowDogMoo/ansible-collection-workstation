{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  gitAuthor: 'cowdogmoo-renovate-bot <157187596+cowdogmoo-renovate-bot[bot]@users.noreply.github.com>',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    ':disableRateLimiting',
    ':dependencyDashboard',
    ':semanticCommits',
    ':enablePreCommit',
    ':automergeDigest',
    'helpers:pinGitHubActionDigests',
  ],
  dependencyDashboardLabels: [
    'renovate-dashboard',
  ],
  dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
  suppressNotifications: [
    'prIgnoreNotification',
  ],
  rebaseWhen: 'conflicted',
  commitBodyTable: true,
  labels: [
    'renovate',
  ],
  'pre-commit': {
    enabled: true,
  },
  packageRules: [
    {
      description: 'Auto merge Galaxy dependencies',
      matchDatasources: [
        'galaxy',
      ],
      automerge: true,
      automergeType: 'pr',
      matchUpdateTypes: [
        'digest',
      ],
    },
    {
      description: 'Auto-merge GitHub Actions',
      matchManagers: [
        'github-actions',
      ],
      matchDatasources: [
        'github-tags',
      ],
      automerge: true,
      automergeType: 'pr',
      matchUpdateTypes: [
        'minor',
        'patch',
      ],
    },
    {
      description: 'Group Ansible Galaxy dependencies',
      matchManagers: [
        'ansible-galaxy',
      ],
      groupName: 'ansible-dependencies',
    },
    {
      matchPackageNames: ['golang/go'],
      extractVersion: '^go(?<version>.*)$',
    },
    {
      packageNames: [ "ruby/ruby" ],
      extractVersion: "^v(?<major>\\d+)_(?<minor>\\d+)_(?<patch>\\d+)$"
    },
    {
      packageNames: [ "python/cpython" ],
      extractVersion: "^v(?<version>.+)$"
    },
  ],
  ansible: {
    managerFilePatterns: [
      '/^requirements\\.yml$/',
      '/^roles/[^/]+/meta/main\\.yml$/',
      '/^galaxy\\.yml$/',
    ],
  },
  regexManagers: [
    {
      description: 'Update asdf tool versions',
      fileMatch: ["/roles/asdf/defaults/main.yml$"],
      matchStrings: [
        '# renovate: datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)(?: versioning=(?<versioning>\\S+))?(?: extractVersion=(?<extractVersion>\\S+))?\\s+- name: \\S+\\s+version: ["\']?(?<currentValue>[^"\'\\s]+)["\']?'
      ],
      versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}',
    }
  ]
}
