---
name: Molecule Test
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  schedule:
    # Runs every Sunday at 4 AM (see https://crontab.guru)
    - cron: "0 4 * * 0"
  workflow_dispatch:

# Cancel any in-progress job when a new workflow is triggered
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  ANSIBLE_FORCE_COLOR: "1"
  COLLECTION_PATH: $HOME/.ansible/collections/ansible_collections/cowdogmoo/workstation
  PY_COLORS: "1"
  PYTHON_VERSION: "3.12.6"
  RUNZERO_DOWNLOAD_TOKEN: ${{ secrets.RUNZERO_DOWNLOAD_TOKEN }}

jobs:
  determine-tests:
    runs-on: ubuntu-latest
    outputs:
      roles-matrix: ${{ steps.set-matrix.outputs.roles-matrix }}
      playbooks-matrix: ${{ steps.set-matrix.outputs.playbooks-matrix }}
      should-run: ${{ steps.check-changes.outputs.should-run }}
    steps:
      - name: Checkout git repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Check for relevant changes and labels
        id: check-changes
        shell: bash
        run: |
          should_run="false"

          if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" || "${{ github.event_name }}" == "push" ]]; then
            should_run="true"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Check labels
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'area/roles') }}" == "true" || \
                  "${{ contains(github.event.pull_request.labels.*.name, 'area/playbooks') }}" == "true" ]]; then
              should_run="true"
            fi

            # Check individual role labels
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'role/asdf') }}" == "true" || \
                  "${{ contains(github.event.pull_request.labels.*.name, 'role/user_setup') }}" == "true" || \
                  "${{ contains(github.event.pull_request.labels.*.name, 'role/package_management') }}" == "true" || \
                  "${{ contains(github.event.pull_request.labels.*.name, 'role/zsh_setup') }}" == "true" ]]; then
              should_run="true"
            fi

            # Check individual playbook labels
            if [[ "${{ contains(github.event.pull_request.labels.*.name, 'playbook/workstation') }}" == "true" || \
                  "${{ contains(github.event.pull_request.labels.*.name, 'playbook/runzero-explorer') }}" == "true" ]]; then
              should_run="true"
            fi

            # Check changed files
            git fetch origin "${{ github.base_ref }}"
            changed_files="$(git diff --name-only "origin/${{ github.base_ref }}"..HEAD)"

            if echo "${changed_files}" | grep -qE "^(roles/|playbooks/|molecule/|requirements\.yml)"; then
              should_run="true"
            fi
          fi

          echo "should-run=${should_run}" >> "$GITHUB_OUTPUT"

          # Debug output
          echo "Event: ${{ github.event_name }}"
          echo "Should run: ${should_run}"

      - name: Determine affected components
        id: set-matrix
        if: steps.check-changes.outputs.should-run == 'true'
        shell: bash
        run: |
          # Initialize empty arrays and default JSON
          roles=()
          playbooks=()
          roles_json='{"include":[]}'
          playbooks_json='{"include":[]}'

          if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" || "${{ github.event_name }}" == "push" ]]; then
            # Test everything for scheduled/manual runs
            roles_json='{"include":[{"name":"Role Test - asdf","path":"roles/asdf"},{"name":"Role Test - user_setup","path":"roles/user_setup"},{"name":"Role Test - package_management","path":"roles/package_management"},{"name":"Role Test - zsh_setup","path":"roles/zsh_setup"}]}'
            playbooks_json='{"include":[{"name":"Playbook Test - workstation","path":"playbooks/workstation"},{"name":"Playbook Test - runzero-explorer","path":"playbooks/runzero-explorer"}]}'
          else
            git fetch origin "${{ github.base_ref }}" || true
            changed_files="$(git diff --name-only "origin/${{ github.base_ref }}"..HEAD)" || true

            # Check requirements.yml changes first - this triggers all tests
            if grep -q "^requirements\.yml$" <<< "${changed_files}"; then
              roles_json='{"include":[{"name":"Role Test - asdf","path":"roles/asdf"},{"name":"Role Test - user_setup","path":"roles/user_setup"},{"name":"Role Test - package_management","path":"roles/package_management"},{"name":"Role Test - zsh_setup","path":"roles/zsh_setup"}]}'
              playbooks_json='{"include":[{"name":"Playbook Test - workstation","path":"playbooks/workstation"},{"name":"Playbook Test - runzero-explorer","path":"playbooks/runzero-explorer"}]}'
            else
              # Check area/roles label
              if [[ "${{ contains(github.event.pull_request.labels.*.name, 'area/roles') }}" == "true" ]]; then
                roles_json='{"include":[{"name":"Role Test - asdf","path":"roles/asdf"},{"name":"Role Test - user_setup","path":"roles/user_setup"},{"name":"Role Test - package_management","path":"roles/package_management"},{"name":"Role Test - zsh_setup","path":"roles/zsh_setup"}]}'
              else
                # Check individual roles
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'role/asdf') }}" == "true" ]] || grep -q "^roles/asdf/" <<< "${changed_files}"; then
                  roles+=('{"name":"Role Test - asdf","path":"roles/asdf"}')
                fi
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'role/user_setup') }}" == "true" ]] || grep -q "^roles/user_setup/" <<< "${changed_files}"; then
                  roles+=('{"name":"Role Test - user_setup","path":"roles/user_setup"}')
                fi
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'role/package_management') }}" == "true" ]] || grep -q "^roles/package_management/" <<< "${changed_files}"; then
                  roles+=('{"name":"Role Test - package_management","path":"roles/package_management"}')
                fi
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'role/zsh_setup') }}" == "true" ]] || grep -q "^roles/zsh_setup/" <<< "${changed_files}"; then
                  roles+=('{"name":"Role Test - zsh_setup","path":"roles/zsh_setup"}')
                fi

                # Create roles JSON if any roles were found
                if [ ${#roles[@]} -gt 0 ]; then
                  roles_json=$(printf '{"include":[%s]}' "$(IFS=,; echo "${roles[*]}")")
                fi
              fi

              # Check area/playbooks label
              if [[ "${{ contains(github.event.pull_request.labels.*.name, 'area/playbooks') }}" == "true" ]]; then
                playbooks_json='{"include":[{"name":"Playbook Test - workstation","path":"playbooks/workstation"},{"name":"Playbook Test - runzero-explorer","path":"playbooks/runzero-explorer"}]}'
              else
                # Check individual playbooks
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'playbook/workstation') }}" == "true" ]] || grep -q "^playbooks/workstation/" <<< "${changed_files}"; then
                  playbooks+=('{"name":"Playbook Test - workstation","path":"playbooks/workstation"}')
                fi
                if [[ "${{ contains(github.event.pull_request.labels.*.name, 'playbook/runzero-explorer') }}" == "true" ]] || grep -q "^playbooks/runzero-explorer/" <<< "${changed_files}"; then
                  playbooks+=('{"name":"Playbook Test - runzero-explorer","path":"playbooks/runzero-explorer"}')
                fi

                # Create playbooks JSON if any playbooks were found
                if [ ${#playbooks[@]} -gt 0 ]; then
                  playbooks_json=$(printf '{"include":[%s]}' "$(IFS=,; echo "${playbooks[*]}")")
                fi
              fi
            fi
          fi

          # Set outputs
          echo "roles-matrix=${roles_json}" >> "$GITHUB_OUTPUT"
          echo "playbooks-matrix=${playbooks_json}" >> "$GITHUB_OUTPUT"

          # Debug output
          echo "Event: ${{ github.event_name }}"
          echo "Roles matrix: ${roles_json}"
          echo "Playbooks matrix: ${playbooks_json}"

  role_test:
    needs: determine-tests
    if: needs.determine-tests.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix: ${{ fromJson(needs.determine-tests.outputs.roles-matrix) }}

    steps:
      - name: Install Act dependencies
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install rsync sudo -y

      - name: Delete huge unnecessary tools folder
        if: env.ACT == ''
        shell: bash
        run: |
          echo "Initial disk space:"
          df -h
          rm -rf /opt/hostedtoolcache
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout git repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: ansible_collections/cowdogmoo/workstation

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'ansible_collections/cowdogmoo/workstation/.hooks/requirements.txt'

      - name: Cache Ansible collections
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/.ansible/collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}

      - name: Install dependencies
        shell: bash
        run: |
          python3 -m pip install -r "ansible_collections/cowdogmoo/workstation/.hooks/requirements.txt"

      - name: Install galaxy dependencies
        working-directory: ansible_collections/cowdogmoo/workstation
        shell: bash
        run: |
          ansible-galaxy collection install -r requirements.yml
          ansible-galaxy install -r requirements.yml

      - name: Run molecule test
        working-directory: ansible_collections/cowdogmoo/workstation/${{ matrix.path }}
        shell: bash
        run: |
          set -ex
          molecule --version
          molecule list

          if ! MOLECULE_DEBUG=1 molecule test; then
            echo "Molecule test failed. Collecting debug information..."

            echo "Docker containers:"
            docker ps -a

            echo "=== Docker Container Logs ==="
            while read -r container; do
              echo "=== Logs from container ${container} ==="
              docker logs "${container}" 2>&1
              echo "=== End logs for container ${container} ==="
            done < <(docker ps -q)

            echo "=== Molecule Logs ==="
            while IFS= read -r -d '' log; do
              echo "Contents of ${log}:"
              cat "${log}"
              echo "=== End of ${log} ==="
            done < <(find . -name '*.log' -print0)

            exit 1
          fi

  playbook_test:
    needs: determine-tests
    if: needs.determine-tests.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix: ${{ fromJson(needs.determine-tests.outputs.playbooks-matrix) }}

    steps:
      - name: Install Act dependencies
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install rsync sudo -y

      - name: Delete huge unnecessary tools folder
        if: env.ACT == ''
        shell: bash
        run: |
          echo "Initial disk space:"
          df -h
          rm -rf /opt/hostedtoolcache
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout git repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: ansible_collections/cowdogmoo/workstation

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'ansible_collections/cowdogmoo/workstation/.hooks/requirements.txt'

      - name: Cache Ansible collections
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/.ansible/collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}

      - name: Install dependencies
        shell: bash
        run: |
          python3 -m pip install -r "ansible_collections/cowdogmoo/workstation/.hooks/requirements.txt"

      - name: Install galaxy dependencies
        working-directory: ansible_collections/cowdogmoo/workstation
        shell: bash
        run: |
          ansible-galaxy collection install -r requirements.yml
          ansible-galaxy install -r requirements.yml

      - name: Run molecule test
        working-directory: ansible_collections/cowdogmoo/workstation/${{ matrix.path }}
        shell: bash
        run: |
          set -ex
          molecule --version
          molecule list

          if ! MOLECULE_DEBUG=1 molecule test; then
            echo "Molecule test failed. Collecting debug information..."

            echo "Docker containers:"
            docker ps -a

            echo "=== Docker Container Logs ==="
            while read -r container; do
              echo "=== Logs from container ${container} ==="
              docker logs "${container}" 2>&1
              echo "=== End logs for container ${container} ==="
            done < <(docker ps -q)

            echo "=== Molecule Logs ==="
            while IFS= read -r -d '' log; do
              echo "Contents of ${log}:"
              cat "${log}"
              echo "=== End of ${log} ==="
            done < <(find . -name '*.log' -print0)

            exit 1
          fi
