---
- name: Ensure user home directories exist
  ansible.builtin.include_tasks: "../../asdf/tasks/ensure_directory_exists.yml"
  args:
    apply:
      become: "{{ ansible_facts['os_family'] != 'Darwin' }}"
  vars:
    directories:
      - path: "{{ item.home }}"
        owner: "{{ item.username }}"
        group: "{{ item.usergroup | default(item.username) }}"
        mode: '0755'
  loop: "{{ zsh_setup_enriched_users }}"
  when: item.username in ansible_facts.getent_passwd

- name: Check if oh-my-zsh and omz-installer.sh exist for each user
  ansible.builtin.stat:
    path: "{{ item.home }}/.oh-my-zsh"
  register: oh_my_zsh_installed
  loop: "{{ zsh_setup_enriched_users }}"

- name: Download oh-my-zsh install script for all zsh_setup_enriched_users
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: "{{ item.home }}/omz-installer.sh"
    mode: '0755'
  become: true
  become_user: "{{ item.username }}"
  when: not oh_my_zsh_installed.results[loop_index].stat.exists
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    index_var: loop_index

- name: Install oh-my-zsh for all zsh_setup_enriched_users
  ansible.builtin.shell: |
    {% if ansible_facts.shell != '/bin/sh' %}
    set -o pipefail
    {% endif %}
    echo 'y' | {{ item.home }}/omz-installer.sh --unattended --keep-zshrc
  args:
    creates: "{{ item.home }}/.oh-my-zsh"
    executable: /bin/zsh
  become: true
  become_user: "{{ item.username }}"
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    index_var: loop_index

- name: Remove omz-installer.sh for all zsh_setup_enriched_users
  ansible.builtin.file:
    path: "{{ item.home }}/omz-installer.sh"
    state: absent
  become: true
  become_user: "{{ item.username }}"
  when: oh_my_zsh_installed.results[loop_index].stat.exists
  changed_when: false
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    index_var: loop_index

- name: Check if .zshrc exists for each user
  ansible.builtin.stat:
    path: "{{ item.home }}/.zshrc"
  register: zshrc_exists
  loop: "{{ zsh_setup_enriched_users }}"

- name: Ensure .zshrc exists for all users
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ item.0.home }}/.zshrc"
    mode: "0644"
  become: true
  become_user: "{{ item.0.username }}"
  loop: "{{ zsh_setup_enriched_users | zip(zshrc_exists.results) | list }}"
  when: not item.1.stat.exists
