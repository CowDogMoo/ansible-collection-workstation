---
- name: Include tasks to gather enriched users
  ansible.builtin.include_tasks: zsh_setup_get_enriched_users.yml

- name: Install required packages for zsh
  ansible.builtin.include_role:
    name: cowdogmoo.workstation.package_management
  vars:
    package_management_common_install_packages: "{{ zsh_setup_common_install_packages }}"

- name: Ensure groups exist for users
  ansible.builtin.group:
    name: "{{ user.usergroup }}"
    state: present
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Ensure user exists
  ansible.builtin.user:
    name: "{{ user.username }}"
    group: "{{ user.usergroup }}"
    shell: "{{ user.shell }}"
    home: "{{ user.home }}"
    state: present
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Ensure user home directories exist
  ansible.builtin.include_tasks: "../../asdf/tasks/ensure_directory_exists.yml"
  args:
    apply:
      become: "{{ ansible_facts['os_family'] != 'Darwin' }}"
  vars:
    directories:
      - path: "{{ user.home }}"
        owner: "{{ user.username }}"
        group: "{{ user.usergroup | default(user.username) }}"
        mode: '0755'
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user
  when: user.username in ansible_facts.getent_passwd


- name: Check if .oh-my-zsh exists for each user
  ansible.builtin.stat:
    path: "{{ user.home }}/.oh-my-zsh"
  register: oh_my_zsh_installed
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Download oh-my-zsh install script for all zsh_setup_enriched_users
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: "{{ item.home }}/.oh-my-zsh_install.sh"
    mode: '0755'
  when: not oh_my_zsh_installed.results[loop_index].stat.exists
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: item
    index_var: loop_index

- name: Install oh-my-zsh for all zsh_setup_enriched_users
  ansible.builtin.shell: |
    set -o pipefail
    echo 'y' | {{ user.home }}/omz-installer.sh --unattended --keep-zshrc
  args:
    creates: "{{ user.home }}/.oh-my-zsh"
    executable: /bin/zsh
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Remove omz-installer.sh for all zsh_setup_enriched_users
  ansible.builtin.file:
    path: "{{ user.home }}/omz-installer.sh"
    state: absent
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Check if .zshrc exists for each user
  ansible.builtin.stat:
    path: "{{ user.home }}/.zshrc"
  register: zshrc_exists
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user

- name: Ensure .zshrc exists for all users
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ user.home }}/.zshrc"
    mode: "0644"
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ zsh_setup_enriched_users }}"
  loop_control:
    loop_var: user
    index_var: loop_index
  when: not zshrc_exists.results[loop_index].stat.exists
