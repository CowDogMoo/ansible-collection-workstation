---
- name: Verify
  hosts: all
  gather_facts: true
  tasks:
    - name: Include default variables
      ansible.builtin.include_vars:
        file: "../../defaults/main.yml"

    - name: Check if asdf is cloned for each user
      ansible.builtin.stat:
        path: "/home/{{ user.username }}/.asdf"
      register: asdf_clone_result
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user

    - name: Assert that asdf is cloned for each user
      ansible.builtin.assert:
        that:
          - item.stat.exists
          - item.stat.isdir
      loop: "{{ asdf_clone_result.results }}"
      loop_control:
        loop_var: item

    - name: Check if setup_asdf.sh exists and is executable for each user
      ansible.builtin.stat:
        path: "/usr/local/bin/setup_asdf_env"
      register: setup_asdf_stat

    - name: Assert that setup_asdf.sh exists and is executable
      ansible.builtin.assert:
        that:
          - setup_asdf_stat.stat.exists
          - setup_asdf_stat.stat.mode | regex_search('0755')

    - name: Verify ASDF is accessible for each user
      ansible.builtin.command: "/home/{{ user.username }}/.asdf/bin/asdf --version"
      register: asdf_check
      failed_when: asdf_check.rc != 0
      changed_when: false
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user

    - name: Check sourcing of asdf.sh in shell profile for each user
      ansible.builtin.command:
        cmd: "grep -q '. \"/home/{{ user.username }}/.asdf/asdf.sh\"' /home/{{ user.username }}/{{ (user.shell == '/bin/zsh') | ternary('.zshrc', '.bashrc') }}"
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user

    - name: Check contents of .tool-versions for each user
      ansible.builtin.command:
        cmd: "grep '{{ plugin.name }} {{ plugin.version }}' /home/{{ user.username }}/.tool-versions"
      loop: "{{ query('subelements', asdf_users, 'plugins', {'skip_missing': true}) }}"
      loop_control:
        loop_var: user_plugin
      when: user_plugin.1.name is defined and user_plugin.1.version is defined

    - name: Verify installed plugins for each user
      ansible.builtin.shell:
        cmd: |
          . /usr/local/bin/setup_asdf_env "{{ user.username }}"
          asdf plugin list | grep -q "{{ plugin.name }}"
        executable: "{{ user.shell }}"
      loop: "{{ query('subelements', asdf_users, 'plugins', {'skip_missing': true}) }}"
      loop_control:
        loop_var: user_plugin
      when: user_plugin.1.name is defined

    - name: Verify specific version of plugins for each user
      ansible.builtin.shell:
        cmd: |
          . /usr/local/bin/setup_asdf_env "{{ user_plugin.0.username }}"
          asdf list "{{ user_plugin.1.name }}" | grep -q "{{ user_plugin.1.version }}"
        executable: "{{ user_plugin.0.shell }}"
      loop: "{{ query('subelements', asdf_users, 'plugins', {'skip_missing': true}) }}"
      loop_control:
        loop_var: user_plugin
      when: user_plugin.1.name is defined and user_plugin.1.version is defined
