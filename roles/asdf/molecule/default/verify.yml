---
- name: Verify
  hosts: all
  gather_facts: true
  tasks:
    - name: Include default variables
      ansible.builtin.include_vars:
        file: "../../defaults/main.yml"

    - name: Include main variables
      ansible.builtin.include_vars:
        file: "../../vars/main.yml"

    - name: Check if asdf is cloned for each user
      ansible.builtin.stat:
        path: "/home/{{ user.username }}/.asdf"
      register: asdf_clone_result
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user

    - name: Assert that asdf is cloned for each user
      ansible.builtin.assert:
        that:
          - item.stat.exists
          - item.stat.isdir
      loop: "{{ asdf_clone_result.results }}"
      loop_control:
        loop_var: item

    - name: Check if setup_asdf.sh exists and is executable for each user
      ansible.builtin.stat:
        path: "{{ asdf_install_script_path }}"
      register: setup_asdf_stat

    - name: Assert that setup_asdf.sh exists and is executable
      ansible.builtin.assert:
        that:
          - setup_asdf_stat.stat.exists
          - setup_asdf_stat.stat.mode | regex_search('0755')

    - name: Verify ASDF is accessible for each user
      ansible.builtin.command: "/home/{{ user.username }}/.asdf/bin/asdf --version"
      register: asdf_check
      failed_when: asdf_check.rc != 0
      changed_when: false
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user

    - name: Check contents of .tool-versions for each user
      ansible.builtin.shell: |
        set -o pipefail
        cat /home/{{ user.username }}/.tool-versions
      args:
        executable: "{{ user.shell }}"
      loop: "{{ asdf_users }}"
      loop_control:
        loop_var: user
      changed_when: false
