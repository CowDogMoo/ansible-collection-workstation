---
- name: Get all plugins for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      . /usr/local/bin/setup_asdf_env "{{ user.username }}" "{{ (ansible_os_family == 'Darwin') | ternary('/Users', '/home') }}/{{ user.username }}"
      asdf plugin list
    executable: "{{ user.shell }}"
  register: asdf_plugins
  changed_when: false
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user
  when: user.username != 'root'

- name: Install asdf plugins for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      . /usr/local/bin/setup_asdf_env "{{ user_plugin.0.username }}" "{{ (ansible_os_family == 'Darwin') | ternary('/Users', '/home') }}/{{ user_plugin.0.username }}"
      if ! asdf plugin list | grep -q "{{ user_plugin.1.name }}"; then
        asdf plugin add "{{ user_plugin.1.name }}"
      fi
    executable: "{{ user_plugin.0.shell }}"
  become: true
  become_user: "{{ user_plugin.0.username }}"
  loop: "{{ query('subelements', asdf_users, 'plugins', {'skip_missing': true}) }}"
  loop_control:
    loop_var: user_plugin
  when: user_plugin.1.name is defined
  changed_when: false

- name: Install specific version of asdf plugins for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      . /usr/local/bin/setup_asdf_env "{{ user_plugin.0.username }}" "{{ (ansible_os_family == 'Darwin') | ternary('/Users', '/home') }}/{{ user_plugin.0.username }}"
      if ! asdf list "{{ user_plugin.1.name }}" | grep -q "{{ user_plugin.1.version }}"; then
        asdf install "{{ user_plugin.1.name }}" "{{ user_plugin.1.version }}"
      fi
    executable: "{{ user_plugin.0.shell }}"
  become: true
  become_user: "{{ user_plugin.0.username }}"
  loop: "{{ query('subelements', asdf_users, 'plugins', {'skip_missing': true}) }}"
  loop_control:
    loop_var: user_plugin
  when: user_plugin.1.name is defined and user_plugin.1.version is defined
  changed_when: false
