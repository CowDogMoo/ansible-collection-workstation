- name: Get all plugins for each user
  ansible.builtin.shell:
    cmd: |
      . {{ asdf_install_script_path }} "{{ asdf_user.home }}"
      asdf plugin list
    executable: "{{ asdf_user.shell }}"
  register: asdf_plugins
  loop: "{{ enriched_asdf_enriched_users }}"
  loop_control:
    loop_var: asdf_user
    label: "{{ asdf_user.username }}"
  changed_when: false
  become: true
  become_user: "{{ asdf_user.username }}"

- name: Install asdf plugins for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      . "{{ asdf_install_script_path }}" "{{ asdf_user.home }}"
      {% if asdf_user.plugins is defined %}
      {% for plugin in asdf_user.plugins %}
      plugins=$(asdf plugin list)
      grep -q "{{ plugin.name }}" <<< "$plugins" || asdf plugin add "{{ plugin.name }}"
      {% endfor %}
      {% endif %}
    executable: "{{ asdf_user.shell }}"
  loop: "{{ enriched_asdf_enriched_users }}"
  loop_control:
    loop_var: asdf_user
    label: "{{ asdf_user.username }}"
  become: true
  become_user: "{{ asdf_user.username }}"
  changed_when: false

- name: Install specific version of asdf plugins for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      . "{{ asdf_install_script_path }}" "{{ asdf_user.home }}"
      {% if asdf_user.plugins is defined %}
      {% for plugin in asdf_user.plugins %}
      asdf install "{{ plugin.name }}" "{{ plugin.version }}"
      if [ "{{ plugin.scope }}" = "global" ]; then
        asdf global "{{ plugin.name }}" "{{ plugin.version }}"
      elif [ "{{ plugin.scope }}" = "local" ]; then
        asdf local "{{ plugin.name }}" "{{ plugin.version }}"
      else
        echo "Invalid scope: {{ plugin.scope }}"
        exit 1
      fi
      {% endfor %}
      {% endif %}
    executable: "{{ asdf_user.shell }}"
  loop: "{{ enriched_asdf_enriched_users }}"
  loop_control:
    loop_var: asdf_user
    label: "{{ asdf_user.username }}"
  become: true
  become_user: "{{ asdf_user.username }}"
  changed_when: false
