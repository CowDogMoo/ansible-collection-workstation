---
- name: Ensure ASDF is initialized
  ansible.builtin.shell: |
    set -o pipefail
    export ASDF_DIR="{{ ansible_env.HOME }}/.asdf"
    export PATH="${ASDF_DIR}/bin:${ASDF_DIR}/shims:${PATH}"

    # Verify ASDF installation
    if [ ! -f "${ASDF_DIR}/asdf.sh" ]; then
      echo "ASDF not properly initialized - asdf.sh missing" >&2
      exit 1
    fi

    # Source ASDF
    . "${ASDF_DIR}/asdf.sh"

    # Verify ASDF command is available
    if ! command -v asdf >/dev/null 2>&1; then
      echo "ASDF command not found in PATH" >&2
      exit 1
    fi

    # Print environment for debugging
    echo "ASDF_DIR: ${ASDF_DIR}"
    echo "PATH: ${PATH}"
    echo "ASDF version: $(asdf --version)"
  args:
    executable: /bin/bash
  register: asdf_init
  changed_when: false

- name: Get available versions for plugins
  ansible.builtin.shell: |
    set -eo pipefail
    export ASDF_DIR="{{ ansible_env.HOME }}/.asdf"
    export PATH="${ASDF_DIR}/bin:${ASDF_DIR}/shims:${PATH}"

    # Source ASDF
    . "${ASDF_DIR}/asdf.sh"

    # Add plugin if not already present
    if ! asdf plugin list | grep -q "{{ plugin.name }}"; then
      asdf plugin add "{{ plugin.name }}"
    fi

    # Get latest version
    asdf list-all "{{ plugin.name }}" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | tail -n 1
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ asdf_username }}"
  register: available_version
  changed_when: false
  environment:
    HOME: "{{ ansible_env.HOME }}"
    ASDF_DIR: "{{ ansible_env.HOME }}/.asdf"
    USER: "{{ asdf_username }}"
