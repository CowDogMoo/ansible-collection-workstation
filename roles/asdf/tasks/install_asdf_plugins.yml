---
- name: Check for zsh availability
  ansible.builtin.command: which zsh
  register: zsh_check
  changed_when: false
  failed_when: false

- name: Check for bash availability
  ansible.builtin.command: which bash
  register: bash_check
  changed_when: false
  failed_when: false
  when: zsh_check.rc != 0

- name: Determine shell to use
  ansible.builtin.set_fact:
    shell_to_use: "{{ (zsh_check.rc == 0) | ternary('/usr/bin/zsh',
                      (bash_check.rc == 0) | ternary('/bin/bash', '/bin/sh')) }}"

- name: Install asdf plugins globally
  become: true
  ansible.builtin.shell:
    cmd: |
      {% if shell_to_use != '/bin/sh' %}
      set -o pipefail
      {% endif %}
      . /etc/profile.d/asdf.sh
      {% for user in asdf_users %}
        {% for plugin in user.plugins %}
          if ! command -v asdf >/dev/null 2>&1; then
            echo "asdf not found in PATH" >&2
            exit 1
          fi
          plugins=$(asdf plugin list 2>/dev/null || true)
          # Use safer approach without pipes when using sh
          {% if shell_to_use != '/bin/sh' %}
          if ! echo "$plugins" | grep -q "{{ plugin.name }}"; then
          {% else %}
          if ! (echo "$plugins" && false) || ! grep -q "{{ plugin.name }}" <<< "$plugins"; then
          {% endif %}
            asdf plugin add "{{ plugin.name }}"
          fi
          asdf install "{{ plugin.name }}" "{{ plugin.version }}"
          asdf global "{{ plugin.name }}" "{{ plugin.version }}"
        {% endfor %}
      {% endfor %}
    executable: "{{ shell_to_use }}"
  changed_when: false
  when: asdf_global_install

- name: Install asdf plugins for each user
  ansible.builtin.shell:
    cmd: |
      {% if shell_to_use != '/bin/sh' %}
      set -o pipefail
      {% endif %}
      export ASDF_DIR="{{ user_item.home }}/.asdf"
      export PATH="${ASDF_DIR}/bin:${ASDF_DIR}/shims:$PATH"
      if [ ! -f "${ASDF_DIR}/asdf.sh" ]; then
        echo "ASDF not properly initialized at ${ASDF_DIR}" >&2
        exit 1
      fi
      . "${ASDF_DIR}/asdf.sh"
      {% if user_item.plugins is defined %}
      {% for plugin in user_item.plugins %}
      plugins=$(asdf plugin list 2>/dev/null || true)
      # Use safer approach without pipes when using sh
      {% if shell_to_use != '/bin/sh' %}
      if ! echo "$plugins" | grep -q "{{ plugin.name }}"; then
      {% else %}
      if ! (echo "$plugins" && false) || ! grep -q "{{ plugin.name }}" <<< "$plugins"; then
      {% endif %}
        asdf plugin add "{{ plugin.name }}"
      fi
      asdf install "{{ plugin.name }}" "{{ plugin.version }}"
      if [ "{{ plugin.scope }}" = "global" ]; then
        asdf global "{{ plugin.name }}" "{{ plugin.version }}"
      elif [ "{{ plugin.scope }}" = "local" ]; then
        asdf local "{{ plugin.name }}" "{{ plugin.version }}"
      else
        echo "Invalid scope: {{ plugin.scope }}"
        exit 1
      fi
      {% endfor %}
      {% endif %}
    executable: "{{ shell_to_use }}"
  become: true
  become_user: "{{ user_item.username }}"
  changed_when: false
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user_item
  when: not asdf_global_install
