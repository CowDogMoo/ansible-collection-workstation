---
- name: Set default username for Kali systems
  ansible.builtin.set_fact:
    asdf_default_username: "kali"
  when: ansible_distribution_release == "kali-rolling" and asdf_default_username is not defined

- name: Include asdf_get_enriched_users tasks
  ansible.builtin.include_tasks: asdf_get_enriched_users.yml
  when: not asdf_global_install

- name: Create global ASDF installation directory
  ansible.builtin.file:
    path: "/opt/asdf"
    state: directory
    mode: "0755"
  become: true
  when: asdf_global_install

- name: Clone ASDF for global installation
  ansible.builtin.git:
    repo: "{{ asdf_git_repo }}"
    dest: "/opt/asdf"
    clone: true
    update: true
  become: true
  when: asdf_global_install

- name: Create asdf.sh script for global ASDF installation
  ansible.builtin.copy:
    dest: "/etc/profile.d/asdf.sh"
    content: |
      export ASDF_DATA_DIR=/opt/asdf
      . /opt/asdf/asdf.sh
      . /opt/asdf/completions/asdf.bash
    mode: "0644"
  become: true
  when: asdf_global_install

- name: Clone asdf for each user
  ansible.builtin.git:
    repo: "{{ asdf_git_repo }}"
    dest: "{{ user.home }}/.asdf"
    clone: true
    update: true
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Ensure asdf is cloned for each user
  ansible.builtin.file:
    path: "{{ user.home }}/.asdf"
    state: directory
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    mode: "0755"
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Deploy .tool-versions file
  ansible.builtin.copy:
    dest: "{{ user.home }}/.tool-versions"
    content: |
      {% for plugin in user.plugins %}
      {{ plugin.name }} {{ plugin.version }}
      {% endfor %}
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    mode: "0644"
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install
    - user.plugins is defined

- name: Ensure correct permissions for .tool-versions
  ansible.builtin.file:
    path: "{{ user.home }}/.tool-versions"
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    mode: "0644"
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Ensure .asdf directory exists for each user
  ansible.builtin.file:
    path: "{{ user.home }}/.asdf"
    state: directory
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    mode: "0755"
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Set permissions for each user's ASDF directory
  ansible.builtin.file:
    path: "{{ user.home }}/.asdf"
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    recurse: true
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Include task to update shell profiles for each user
  ansible.builtin.include_tasks: update_shell_profiles.yml
  vars:
    line: "{{ user.shell_profile_lines }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Gather installed ASDF plugins and versions for each user
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      if [ -f "{{ user.home }}/.asdf/asdf.sh" ]; then
        . "{{ user.home }}/.asdf/asdf.sh"
      fi
      {% if user.plugins is defined %}
      {% for plugin in user.plugins %}
      if ! asdf plugin list | grep -q {{ plugin.name }}; then
        asdf plugin add {{ plugin.name }};
      fi;
      {% endfor %}
      echo "plugins:$(asdf plugin list),versions:$(asdf list all | tr '\n' ',')"
      {% else %}
      echo "plugins:,versions:"
      {% endif %}
    executable: "{{ user.shell }}"
  register: asdf_info
  changed_when: false
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_enriched_users }}"
  loop_control:
    loop_var: user
  when:
    - not asdf_global_install

- name: Copy setup_asdf_env.sh to a common location for all users
  ansible.builtin.copy:
    src: setup_asdf_env.sh
    dest: "{{ asdf_install_script_path }}"
    mode: "0755"
  when: not asdf_global_install

- name: Install libyaml from source
  ansible.builtin.include_tasks: install_libyaml.yml
  when: ansible_distribution == 'Rocky'

- name: Install asdf plugins and set versions
  ansible.builtin.include_tasks: package_individual_setup.yml
