---
- name: Set default username for Kali systems
  ansible.builtin.set_fact:
    asdf_default_username: "kali"
  when: ansible_distribution_release == "kali-rolling"

- name: Clone asdf for each user
  ansible.builtin.git:
    repo: "{{ asdf_git_repo }}"
    dest: "/home/{{ user.username }}/.asdf"
    clone: true
    update: false
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user
  when:
    - asdf_users is defined
    - user.username != 'root'

- name: Deploy .tool-versions file
  ansible.builtin.template:
    src: tool-versions.j2
    dest: "/home/{{ user.username }}/.tool-versions"
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    mode: "0644"
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user
  when:
    - asdf_users is defined
    - user.username != 'root'

- name: Ensure correct permissions for .tool-versions
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.tool-versions"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
    mode: "0644"
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  when:
    - item.username != 'root'

- name: Set permissions for each user's ASDF directory
  ansible.builtin.file:
    path: "/home/{{ user.username }}/.asdf"
    owner: "{{ user.username }}"
    group: "{{ user.usergroup | default(user.username) }}"
    recurse: true
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user
  when:
    - asdf_users is defined
    - user.username != 'root'

- name: Check if .asdf directory exists for each user
  ansible.builtin.stat:
    path: "/home/{{ user.username }}/.asdf"
  register: asdf_dir_check
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user

- name: Update shell profiles for each user
  ansible.builtin.lineinfile:
    path: "/home/{{ user_line.0.username }}/{{ (ansible_user_shell == '/bin/zsh') | ternary('.zshrc', '.bashrc') }}"
    line: "{{ user_line.1 }}"
    state: present
  loop: "{{ asdf_users | subelements('shell_profile_lines') }}"
  loop_control:
    loop_var: user_line
  when: user_line.0.username != 'root'

- name: Gather installed ASDF plugins and versions for each user
  ansible.builtin.shell: set -o pipefail
    . /usr/local/bin/setup_asdf_env "{{ user.username }}"

    {% for plugin in user.plugins %}
    if ! asdf plugin list | grep -q {{ plugin.name }}; then
    asdf plugin add {{ plugin.name }};
    fi;
    {% endfor %}

    echo "plugins:$(asdf plugin list),versions:$(asdf list all | tr '\n' ',')"
  args:
    executable: "{{ user.shell }}"
  register: asdf_info
  changed_when: false
  become: true
  become_user: "{{ user.username }}"
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: user

- name: Copy setup_asdf_env.sh to a common location for all users
  ansible.builtin.copy:
    src: setup_asdf_env.sh
    dest: /usr/local/bin/setup_asdf_env
    mode: "0755"
  become: true

- name: Install and configure asdf packages for each user
  ansible.builtin.include_tasks: package_setup.yml
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: asdf_user
