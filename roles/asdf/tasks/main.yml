---
- name: Set default username for Kali systems
  ansible.builtin.set_fact:
    asdf_default_username: "kali"
  when: ansible_distribution_release == "kali-rolling"

- name: Debug asdf_users variable
  ansible.builtin.debug:
    var: asdf_users

- name: Clone asdf for each user
  ansible.builtin.git:
    repo: "{{ asdf_git_repo }}"
    dest: "/home/{{ item.username }}/.asdf"
    clone: true
    update: false
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  when:
    - asdf_users is defined
    - item.username != 'root'

- name: Debug asdf_users variable
  ansible.builtin.debug:
    var: asdf_users

- name: Export ASDF environment variables for each user
  ansible.builtin.lineinfile:
    path: "/home/{{ item.0.username }}/{{ (item.0.shell == '/usr/bin/zsh') | ternary('.zshrc', '.bashrc') }}"
    line: "{{ item.1 }}"
    create: yes
  loop: "{{ asdf_users | subelements('shell_profile_lines') }}"
  loop_control:
    label: "{{ item.0.username }}"
    loop_var: item

- name: Deploy .tool-versions file
  ansible.builtin.template:
    src: tool-versions.j2
    dest: "/home/{{ item.username }}/.tool-versions"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
    mode: '0644'
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  when:
    - asdf_users is defined
    - item.username != 'root'

- name: Ensure correct permissions for .tool-versions
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.tool-versions"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
    mode: '0644'
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  when:
    - asdf_users is defined
    - item.username != 'root'

- name: Set permissions for each user's ASDF directory
  ansible.builtin.file:
    path: "/home/{{ item.username }}/.asdf"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
    recurse: true
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  when:
    - asdf_users is defined
    - item.username != 'root'

- name: Check if .asdf directory exists for each user
  ansible.builtin.stat:
    path: "/home/{{ item.username }}/.asdf"
  register: asdf_dir_check
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item

- name: Update shell profiles for each user
  ansible.builtin.lineinfile:
    path: "/home/{{ user_line.0.username }}/{{ (ansible_user_shell == '/bin/zsh') | ternary('.zshrc', '.bashrc') }}"
    line: "{{ user_line.1 }}"
    state: present
  loop: "{{ asdf_users | subelements('shell_profile_lines') }}"
  loop_control:
    loop_var: user_line
  when: user_line.0.username != 'root'
    
- name: Gather installed ASDF plugins and versions for each user
  ansible.builtin.shell:
    cmd: |
      ASDF_PATH="/home/{{ item.username }}/.asdf"
      PATH="$ASDF_PATH/bin:$ASDF_PATH/shims:$PATH"
      export ASDF_PATH PATH

      if [ -f "$ASDF_PATH/asdf.sh" ]; then
        source "$ASDF_PATH/asdf.sh"
      else
        echo "ASDF script not found for user {{ item.username }}"
        exit 1
      fi

      {% for package in asdf_packages %}
      if ! asdf plugin list | grep -q {{ package.name }}; then
        asdf plugin add {{ package.name }};
      fi;
      {% endfor %}
      
      echo "plugins:$(asdf plugin list),versions:$(asdf list all | tr '\n' ',')"
  register: asdf_info
  changed_when: false
  become: true
  become_user: "{{ item.username }}"
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: item
  environment:
    SHELL: "/usr/bin/zsh"


- name: Set ASDF installed plugins and versions facts
  ansible.builtin.set_fact:
    asdf_installed_plugins: "{{ asdf_installed_plugins | default({}) | combine({ item.item.username: item.stdout_lines | first | split() }) }}"
  loop: "{{ asdf_info.results }}"
  loop_control:
    loop_var: item

- name: Install and configure asdf packages for each user
  ansible.builtin.include_tasks: package_setup.yml
  loop: "{{ asdf_users }}"
  loop_control:
    loop_var: asdf_user

