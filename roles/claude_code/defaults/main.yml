---
claude_code_username: "{{ ansible_user_id | default(ansible_user) }}"
claude_code_usergroup: "{{ (ansible_facts['os_family'] == 'Darwin') | ternary('staff', claude_code_username) }}"
claude_code_user_home: >-
  {{ (ansible_facts['os_family'] == 'Darwin') | ternary(ansible_env.HOME,
     (claude_code_username == 'root') | ternary('/root', '/home/' + claude_code_username)) }}

# Configuration directory for Claude Code
claude_code_config_dir: "{{ claude_code_user_home }}/.claude"

# Whether to install Claude Code CLI
claude_code_install: true

# Whether to manage Claude Code settings
claude_code_manage_settings: true

# Whether to backup existing settings before overwriting
claude_code_backup_settings: true

# Claude Code hooks configuration
# Hooks allow you to run commands in response to Claude Code events
# See: https://docs.claude.com/en/docs/claude-code/hooks
claude_code_hooks:
  PreToolUse:
    - matcher: "Bash"
      hooks:
        - type: "command"
          command: "python3 -c \"import sys; sys.stderr.write('üîî HOOK TEST: Hooks system is working!\\n'); sys.exit(0)\""
        - type: "command"
          command: "python3 -c \"import json, sys, re; data=json.load(sys.stdin); cmd=data.get('tool_input',{}).get('command',''); is_git_commit=bool(re.search(r'git\\\\s+commit.*-m', cmd)) and 'fabric' not in cmd; msg='‚ùå BLOCKED: Do not use git commit -m directly.\\\\n\\\\n‚úÖ Use fabric for commit messages:\\\\n   git diff --staged | fabric --pattern commit\\\\n\\\\nThen commit with:\\\\n   git commit -m \\\\\"$(git diff --staged | fabric --pattern commit)\\\\\"' if is_git_commit else ''; sys.stderr.write(msg + '\\\\n') if msg else None; sys.exit(2 if msg else 0)\""
        - type: "command"
          command: "python3 -c \"import json, sys; data=json.load(sys.stdin); cmd=data.get('tool_input',{}).get('command',''); is_pr_create='gh pr create' in cmd; msg='‚ùå BLOCKED: Generate PR description first.\\\\n\\\\n‚úÖ Use fabric for PR descriptions:\\\\n   git diff main...HEAD | fabric --pattern commit' if is_pr_create else ''; sys.stderr.write(msg + '\\\\n') if msg else None; sys.exit(2 if msg else 0)\""

# Additional Claude Code settings
# These can include any valid Claude Code configuration options
claude_code_additional_settings: {}

# Example additional settings:
# claude_code_additional_settings:
#   editor: "vim"
#   theme: "dark"
#   max_tokens: 4096
