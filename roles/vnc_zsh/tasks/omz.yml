---
- name: Check if .oh-my-zsh exists for all vnc_zsh_users
  ansible.builtin.stat:
    path: "/home/{{ item.username }}/.oh-my-zsh"
  register: oh_my_zsh_installed
  with_items: "{{ vnc_zsh_users }}"

- name: Download oh-my-zsh install script for all vnc_zsh_users
  ansible.builtin.get_url:
    url: "{{ vnc_zsh_omz_install_script_url }}"
    dest: "/home/{{ item.username }}/zsh-installer.sh"
    mode: "0755"
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
  when: "not oh_my_zsh_installed.results[item | int].stat.exists"
  with_items: "{{ vnc_zsh_users }}"
  changed_when: false

- name: Install oh-my-zsh for all vnc_zsh_users
  ansible.builtin.command: "echo 'y' | bash /home/{{ item.username }}/zsh-installer.sh"
  args:
    creates: "/home/{{ item.username }}/.oh-my-zsh"
  become: true
  become_user: "{{ item.username }}"
  when: "not oh_my_zsh_installed.results[item | int].stat.exists"
  with_items: "{{ vnc_zsh_users }}"
  changed_when: false

- name: Check if zsh-installer.sh exists for all vnc_zsh_users
  ansible.builtin.stat:
    path: "/home/{{ item.username }}/zsh-installer.sh"
  register: zsh_installer_exists
  with_items: "{{ vnc_zsh_users }}"

- name: Remove zsh-installer.sh for all vnc_zsh_users
  ansible.builtin.file:
    path: "/home/{{ item.username }}/zsh-installer.sh"
    state: absent
  become: true
  become_user: "{{ item.username }}"
  when: "zsh_installer_exists.results[item | int].stat.exists"
  with_items: "{{ vnc_zsh_users }}"
  changed_when: false

- name: Create per-user $HOME/.zshrc files
  ansible.builtin.template:
    src: zshrc.j2
    dest: "/home/{{ item.username }}/.zshrc"
    mode: 0744
    owner: "{{ item.username }}"
    group: "{{ item.usergroup | default(item.username) }}"
  with_items: "{{ vnc_zsh_users }}"
