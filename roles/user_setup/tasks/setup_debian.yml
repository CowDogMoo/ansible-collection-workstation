---
- name: Gather the list of unique shells to install
  ansible.builtin.set_fact:
    unique_shells: "{{ user_setup_default_users | map(attribute='shell') | unique | map('regex_replace', '^/bin/(.*)$', '\\1') | list }}"
  tags: always

- name: Install base packages
  become: true
  ansible.builtin.apt:
    name: "{{ user_setup_install_packages }}"
    state: present
    update_cache: true
  environment:
    DEBIAN_FRONTEND: noninteractive
  failed_when: >
    ansible_failed_result is defined and
    ("No package matching" in ansible_failed_result.msg or
    "Unable to fetch some archives" in ansible_failed_result.msg)
  tags: packages

- name: Install user-specific shells
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop: "{{ unique_shells }}"
  when: item != '' and item != 'bash' # Use the package name 'bash', not the path
  environment:
    DEBIAN_FRONTEND: noninteractive
  failed_when: >
    ansible_failed_result is defined and
    ("No package matching" in ansible_failed_result.msg or
    "Unable to fetch some archives" in ansible_failed_result.msg)
  tags: shells
